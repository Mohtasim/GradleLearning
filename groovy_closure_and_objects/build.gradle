task groovy {

}
/*
Groovy Closure and Lambda expression example
*/

def foo = "one million dollar"

def myClosure = {
    println "This is my closure"
    println "My dream is to have $foo"
}

myClosure()

def bar = myClosure
def baz = bar

baz()

def doubleIt = { x -> x + x }

def applyTwice(func, arg) {
    func(func(arg))
}

foo = 5
println "The foo is $foo and after double it twice, it is ${applyTwice(doubleIt, foo)}"

/*
Groovy complex closure example and List
*/

def myList = ["gradle", "groovy", "stringItem"]

def printItem = {item -> println "One of the myList item is $item"}

myList.each(printItem)

myList.each{println "Compact closure example. myList item is $it"}